{"version":3,"sources":["Components/Main/Main.module.css","FirstPage/FirstPage.module.css","api/factures-api.tsx","reducers/invoice-product-reducer.ts","reducers/app-reducer.ts","Components/utils/error-utils.ts","reducers/invoice-reducer.ts","Components/EditableSpan/EditableSpan.tsx","Components/ProductPickerForm/ProductPickerForm.tsx","Components/InvoiceForm/InvoiceForm.tsx","Components/Main/Main.tsx","reducers/client-reducer.ts","Components/ClientsTable/ClientsTable.tsx","reducers/sellers-reducer.ts","ProductTable/ProductTable.tsx","Components/SellersTable/SellersTable.tsx","Components/InvoicesTable/InvoicesProductTable/InvoicesProductTable.tsx","Components/ProductModal/ProductModal.tsx","Components/InvoicesTable/InvoicesTable.tsx","assets/img/welcome.svg","FirstPage/FirstPage.tsx","Components/ErrorSnackbar/ErrorSnackbar.tsx","App.tsx","reportWebVitals.ts","reducers/products-reducer.ts","redux/store.tsx","index.tsx","Components/InvoiceForm/InvoiceForm.module.css"],"names":["module","exports","instance","axios","create","baseURL","withCredentials","facturaAPI","get","invoiceData","post","invoiceId","delete","initialState","appReducerInitialState","status","error","isInitialized","setAppErrorAC","type","setAppStatusAC","setIsInitializedAC","handleServerAppError","data","dispatch","message","resultCode","handleServerNetworkError","initialInvoiceReducerState","getInvoicesTC","then","res","invoices","catch","EditableSpan","React","memo","props","console","log","useState","editMode","setEditMode","value","title","setTitle","TextField","onChange","e","currentTarget","autoFocus","onBlur","id","onDoubleClick","useStyles","makeStyles","table","minWidth","width","overflow","maxHeight","paper","maxWidth","ProductPickerForm","classes","useDispatch","returnName","product","allProducts","find","item","ID","name","onChangeHandler","newValue","newAmount","changeAmount","TableContainer","component","Paper","className","Table","aria-label","TableHead","TableRow","TableCell","style","fontSize","products","length","align","Button","variant","color","onClick","TableBody","map","row","scope","fontWeight","amount","red","cursor","deleteProduct","isObjEqual","obj1","obj2","validationSchema","yup","client","required","seller","theme","createStyles","root","margin","spacing","display","flexDirection","modal","alignItems","justifyContent","backgroundColor","palette","background","boxShadow","shadows","padding","h1","typography","button","btnWrapp","InvoicePaymentStatus","InvoiceForm","useEffect","formik","useFormik","initialValues","productCount","onSubmit","values","newInvoice","clientID","sellerID","invoiceProductArr","sellDate","sellMilliseconds","paymentDate","paymentMilliseconds","issueDate","issueMilliseconds","addInvoice","resetForm","clients","useSelector","state","sellers","setModalOpen","invoiceProducts","Date","setSellDate","setPaymentDate","setIssueDate","getTime","elevation","s","handleSubmit","select","label","handleChange","placeholder","input","touched","Boolean","errors","helperText","option","idx","MenuItem","info","disabled","sellerProducts","size","obj","addProduct","startIcon","Modal","aria-labelledby","aria-describedby","open","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","utils","DateFnsUtils","format","date","KeyboardButtonProps","btn","drawerWidth","appBar","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","mixins","searchIcon","height","position","pointerEvents","search","borderRadius","shape","fade","common","white","inputRoot","inputInput","paddingLeft","grow","flexGrow","sectionDesktop","content","sectionMobile","green","Main","useTheme","setOpen","setAnchorEl","setMobileMoreAnchorEl","CssBaseline","AppBar","clsx","Toolbar","IconButton","edge","Typography","noWrap","InputBase","inputProps","aria-controls","aria-haspopup","event","AccountCircle","Drawer","direction","Divider","List","link","to","ListItem","ListItemIcon","ListItemText","primary","children","clientInitialState","getClientsTC","ClientsTable","rows","app","email","phone","numberTax","bill","currency","address","country","city","street","postalCode","company","top","textAlign","CircularProgress","sellerInitialState","getSellersTC","ProductTable","price","unit","tax","border","SellersTable","handleOpen","handleClose","InvoicesProductTable","productsAll","findProduct","ProductModal","span","InvoicesTable","appStatus","findClientName","findSellerName","deleteHandler","deleteInvoiceTC","numberFacture","parseInt","toDateString","priceNetto","priceBrutto","Box","FirstPage","wrapp","img","src","welcome","alt","Alert","ErrorSnackbar","reason","isOpen","Snackbar","autoHideDuration","severity","App","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialProductState","rootReducer","combineReducers","action","filter","newArr","some","similarObj","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f3276584.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Main_link__1VAR8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapp\":\"FirstPage_wrapp__2k-Cs\",\"img\":\"FirstPage_img__3m7OD\"};","import axios from 'axios'\nimport {ClientType} from \"../reducers/client-reducer\";\nimport {SellersType} from \"../reducers/sellers-reducer\";\nimport {invoiceDataForCreate, InvoiceType} from \"../reducers/invoice-reducer\";\n\nconst settings = {\n    withCredentials: true,\n}\n\nconst instance = axios.create({\n    baseURL: 'http://localhost:5000/',\n    ...settings\n})\n\n\nexport type ResponseType<T = []> = {\n    resultCode: number\n    data: T,\n    message: string\n}\n\nexport const facturaAPI = {\n    getClients() {\n        return instance.get<ResponseType<ClientType[]>>('clients')\n    },\n    getSellers() {\n        return instance.get<ResponseType<SellersType[]>>('sellers')\n    },\n    getInvoices() {\n        return instance.get<ResponseType<InvoiceType[]>>('factures')\n    },\n    createInvoice(invoiceData: invoiceDataForCreate) {\n        return instance.post<ResponseType<InvoiceType>>('create-facture', invoiceData)\n    },\n    deleteInvoice(invoiceId: string){\n        return instance.delete<ResponseType>(`delete-facture/${invoiceId}`)\n    }\n}\n","import {isObjEqual} from \"../Components/InvoiceForm/InvoiceForm\";\n\nexport type InvoiceProductType = {\n    ID: string\n    amount: string\n}\n\ntype InvoiceProductReducerType = InvoiceProductType[]\n\nconst initialState: InvoiceProductReducerType = []\n\nexport const invoiceProductReducer = (state = initialState, action: InvoiceProductReducerActionType) => {\n    switch (action.type) {\n        case \"ADD_PRODUCT\":{\n            let newArr = [...state]\n            if (newArr.map(item => isObjEqual(action.obj, item)).some(item => !item)) {\n                return newArr\n            } else {\n                const similarObj = newArr.find(item => item.ID === action.obj.ID)\n                if (similarObj) {\n                    similarObj.amount = action.obj.amount\n                } else {\n                    return [\n                        action.obj,\n                        ...newArr\n                    ]\n                }\n            }\n            return newArr\n        }\n        case \"DELETE_PRODUCT\":\n            return state.filter(item => item.ID !== action.id)\n        case \"RESET_PRODUCTS\":\n            return []\n        case \"CHANGE_AMOUNT\":\n            return state.map(item => item.ID === action.id ? {...item, amount: action.newAmount} : item)\n        default:\n            return state\n    }\n}\n\ntype InvoiceProductReducerActionType =\n    | ReturnType<typeof addProduct>\n    | ReturnType<typeof deleteProduct>\n    | ReturnType<typeof resetProducts>\n    | ReturnType<typeof changeAmount>\n\nexport const addProduct = (obj: InvoiceProductType) => ({\n    type: \"ADD_PRODUCT\",\n    obj\n} as const)\n\nexport const deleteProduct = (id: string) => ({\n    type: \"DELETE_PRODUCT\",\n    id\n} as const)\n\nexport const resetProducts = () => ({\n    type: \"RESET_PRODUCTS\"\n} as const)\n\nexport const changeAmount = (id: string, newAmount: string) => ({\n    type: \"CHANGE_AMOUNT\", id, newAmount\n} as const)\n","import {Dispatch} from \"redux\";\nimport {getClientsTC} from \"./client-reducer\";\nimport {getSellersTC} from \"./sellers-reducer\";\nimport {getInvoicesTC} from \"./invoice-reducer\";\n\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\n\ntype AppReducerStateType = {\n    status: RequestStatusType\n    error: string | null,\n    isInitialized: true | false\n}\n\nconst appReducerInitialState: AppReducerStateType = {\n    status: \"idle\",\n    error: null,\n    isInitialized: false\n}\n\nexport const appReducer = (state = appReducerInitialState, action: AppReducerActionType): AppReducerStateType => {\n    switch (action.type) {\n        case 'APP/SET-STATUS':\n            return {...state, status: action.status}\n        case 'APP/SET-ERROR':\n            return {...state, error: action.error}\n        case \"APP/SET-IS-INITIALIZED\":\n            return {...state, isInitialized: action.status}\n        default:\n            return state\n    }\n}\nexport type SetAppErrorActionType = ReturnType<typeof setAppErrorAC>\nexport type SetAppStatusActionType = ReturnType<typeof setAppStatusAC>\n\ntype AppReducerActionType =\n    | SetAppErrorActionType\n    | SetAppStatusActionType\n    | ReturnType<typeof setIsInitializedAC>\n\n\nexport const setAppErrorAC = (error: string | null) => ({type: 'APP/SET-ERROR', error} as const)\nexport const setAppStatusAC = (status: RequestStatusType) => ({type: 'APP/SET-STATUS', status} as const)\nexport const setIsInitializedAC = (status: boolean) => ({type: 'APP/SET-IS-INITIALIZED', status} as const)\n\n","import {Dispatch} from 'redux'\r\nimport {setAppErrorAC, SetAppErrorActionType, setAppStatusAC, SetAppStatusActionType} from \"../../reducers/app-reducer\";\r\nimport {ResponseType} from \"../../api/factures-api\";\r\n\r\nexport const handleServerAppError = <D>(data: ResponseType<D>, dispatch: Dispatch<SetAppErrorActionType | SetAppStatusActionType>) => {\r\n    if (data.message) {\r\n        dispatch(setAppErrorAC(data.message))\r\n    } else {\r\n        dispatch(setAppErrorAC('Some error occurred'))\r\n    }\r\n\r\n    if(data.resultCode === 0) {\r\n        dispatch(setAppStatusAC('succeeded'))\r\n\r\n    }else {\r\n        dispatch(setAppStatusAC('failed'))\r\n    }\r\n}\r\n\r\nexport const handleServerNetworkError = (error: { message: string }, dispatch: Dispatch<SetAppErrorActionType | SetAppStatusActionType>) => {\r\n    dispatch(setAppErrorAC(error.message ? error.message : 'Some error occurred'))\r\n    dispatch(setAppStatusAC('failed'))\r\n}\r\n\r\n\r\n// export const handleServerAppSuccess =\r\n","import {Dispatch} from \"redux\";\nimport {facturaAPI} from \"../api/factures-api\";\nimport {resetProducts} from \"./invoice-product-reducer\";\nimport {setAppStatusAC, setIsInitializedAC} from \"./app-reducer\";\nimport {handleServerAppError, handleServerNetworkError} from \"../Components/utils/error-utils\";\n\nexport type InvoiceType = {\n    ID: string,\n    clientID: string,\n    sellerID: string,\n    numberFacture: string,\n    products: InvoiceProductType[],\n    sellDate: string,\n    paymentDate: string,\n    issueDate: string,\n    status: string,\n    priceNetto: string,\n    priceBrutto: string\n}\n\ntype InvoiceProductType = {\n    ID: string,\n    amount: string\n}\n\nconst initialInvoiceReducerState: InvoiceType[] = [\n    {\n        \"ID\": \"1\",\n        \"clientID\": \"3\",\n        \"sellerID\": \"1\",\n        \"numberFacture\": \"2\",\n        \"products\": [\n            {\n                \"ID\": \"1\",\n                \"amount\": \"5\"\n            },\n            {\n                \"ID\": \"3\",\n                \"amount\": \"3\"\n            }\n        ],\n        \"sellDate\": \"1606423638172\",\n        \"paymentDate\": \"1606423638172\",\n        \"issueDate\": \"1606423638172\",\n        \"status\": \"paid\",\n        \"priceNetto\": \"100\",\n        \"priceBrutto\": \"110\"\n    },\n    {\n        \"ID\": \"2\",\n        \"clientID\": \"2\",\n        \"sellerID\": \"1\",\n        \"numberFacture\": \"2\",\n        \"products\": [\n            {\n                \"ID\": \"2\",\n                \"amount\": \"10\"\n            },\n            {\n                \"ID\": \"5\",\n                \"amount\": \"7\"\n            }\n        ],\n        \"sellDate\": \"1606423638172\",\n        \"paymentDate\": \"1606423638172\",\n        \"issueDate\": \"1606423638172\",\n        \"status\": \"partially\",\n        \"priceNetto\": \"40\",\n        \"priceBrutto\": \"44\"\n    },\n    {\n        \"ID\": \"3\",\n        \"clientID\": \"5\",\n        \"sellerID\": \"1\",\n        \"numberFacture\": \"3\",\n        \"products\": [\n            {\n                \"ID\": \"5\",\n                \"amount\": \"2\"\n            },\n            {\n                \"ID\": \"6\",\n                \"amount\": \"5\"\n            },\n            {\n                \"ID\": \"7\",\n                \"amount\": \"8\"\n            },\n            {\n                \"ID\": \"8\",\n                \"amount\": \"5\"\n            }\n        ],\n        \"sellDate\": \"1606423638172\",\n        \"paymentDate\": \"1606423638172\",\n        \"issueDate\": \"1606423638172\",\n        \"status\": \"unpaid\",\n        \"priceNetto\": \"200\",\n        \"priceBrutto\": \"240\"\n    },\n]\n\n\nexport const invoiceReducer = (state = initialInvoiceReducerState, action: InvoiceReducerActionType) => {\n    switch (action.type) {\n        case \"SET_INVOICES\":\n            return [\n                ...action.invoices\n            ]\n        case \"ADD_INVOICE\":\n            return [\n                action.invoiceData,\n                ...state\n            ]\n        case \"DELETE_INVOICE\":\n            return state.filter(item => item.ID !== action.id)\n        default:\n            return state\n    }\n}\n\ntype InvoiceReducerActionType =\n    | ReturnType<typeof setInvoices>\n    | ReturnType<typeof addInvoice>\n    | ReturnType<typeof deleteInvoice>\n\nconst setInvoices = (invoices: InvoiceType[]) => ({\n    type: \"SET_INVOICES\",\n    invoices\n} as const)\n\nconst addInvoice = (invoiceData: InvoiceType) => ({\n    type: \"ADD_INVOICE\",\n    invoiceData\n} as const)\n\nexport const deleteInvoice = (id: string) => ({\n    type: \"DELETE_INVOICE\",\n    id\n} as const)\n\nexport const getInvoicesTC = () => (dispatch: Dispatch) => {\n    dispatch(setIsInitializedAC(false))\n    dispatch(setAppStatusAC(\"loading\"))\n    facturaAPI.getInvoices()\n        .then(res => {\n            dispatch(setIsInitializedAC(true))\n            if (res.data.resultCode === 0) {\n                dispatch(setInvoices(res.data.data))\n                dispatch(setAppStatusAC(\"succeeded\"))\n            } else {\n                handleServerAppError(res.data, dispatch);\n            }\n        })\n        .catch((error) => {\n            handleServerNetworkError(error, dispatch)\n        })\n}\n\nexport type invoiceDataForCreate = {\n    sellDate: number | null,\n    paymentDate: number | null,\n    issueDate: number | null,\n    clientID: string,\n    sellerID: string,\n    products: InvoiceProductType[]\n}\n\n\nexport const createInvoiceTC = (invoiceData: invoiceDataForCreate) => (dispatch: Dispatch) => {\n    dispatch(setAppStatusAC(\"loading\"))\n    facturaAPI.createInvoice(invoiceData)\n        .then((res) => {\n            if (res.data.resultCode === 0) {\n                dispatch(addInvoice(res.data.data))\n                dispatch(resetProducts())\n                dispatch(setAppStatusAC(\"succeeded\"))\n                handleServerAppError(res.data, dispatch);\n            } else {\n                handleServerAppError(res.data, dispatch);\n            }\n        })\n        .catch((error) => {\n            handleServerNetworkError(error, dispatch)\n        })\n}\n\nexport const deleteInvoiceTC = (invoiceId: string) => (dispatch: Dispatch) => {\n    dispatch(setAppStatusAC(\"loading\"))\n    facturaAPI.deleteInvoice(invoiceId)\n        .then((res) => {\n            if (res.data.resultCode === 0) {\n                dispatch(deleteInvoice(invoiceId))\n                dispatch(setAppStatusAC(\"succeeded\"))\n                handleServerAppError(res.data, dispatch);\n            } else {\n                handleServerAppError(res.data, dispatch);\n            }\n        })\n        .catch((error) => {\n            handleServerNetworkError(error, dispatch)\n        })\n}\n","import React, {ChangeEvent, useState} from 'react';\r\nimport {TextField} from '@material-ui/core';\r\n\r\ntype EditableSpanPropsType = {\r\n    id: string,\r\n    value: string\r\n    onChange: (newValue: string, id: string) => void\r\n}\r\n\r\nexport const EditableSpan = React.memo(function (props: EditableSpanPropsType) {\r\n    console.log(\"EditableSpan called\");\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [title, setTitle] = useState(props.value);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n        setTitle(props.value);\r\n    }\r\n    const activateViewMode = () => {\r\n        setEditMode(false);\r\n        props.onChange(props.id, title);\r\n    }\r\n    const changeTitle = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n\r\n    return editMode\r\n        ? <TextField value={title} onChange={changeTitle} autoFocus onBlur={activateViewMode}/>\r\n        : <span onDoubleClick={activateEditMode}>{props.value}</span>\r\n});\r\n","import React, {ChangeEvent, useEffect, useRef, useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport {ProductType} from \"../../reducers/products-reducer\";\nimport {Button, TextField} from \"@material-ui/core\";\nimport {array} from \"yup\";\nimport {SellersType} from \"../../reducers/sellers-reducer\";\nimport {useDispatch} from \"react-redux\";\nimport {changeAmount, deleteProduct, resetProducts} from \"../../reducers/invoice-product-reducer\";\nimport {EditableSpan} from \"../EditableSpan/EditableSpan\";\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\nimport {red} from \"@material-ui/core/colors\";\n\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 650,\n        width: '100%',\n        overflow: 'auto',\n        maxHeight: '90vh',\n    },\n    paper: {\n        maxWidth: 650,\n        width: '100%',\n        overflow: 'auto',\n        maxHeight: '90vh'\n    }\n});\n\ntype ProductPropsType = {\n    products: Array<{ ID: string, amount: string }>\n    allProducts: ProductType[] | undefined\n}\n\n\nexport default function ProductPickerForm(props: ProductPropsType) {\n    const classes = useStyles();\n    const dispatch = useDispatch()\n\n    const returnName = (id: string) => {\n        const product = props.allProducts?.find(item => item.ID === id)\n        return product?.name\n    }\n\n    const deleteHandler = (id: string) => {\n        dispatch(deleteProduct(id))\n    }\n    const onChangeHandler = (id: string, newValue: string) => {\n        dispatch(changeAmount(id, newValue))\n    }\n\n\n    return (\n        <TableContainer component={Paper} className={classes.paper}>\n            <Table className={classes.table} aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell><span style={{fontSize: '18px'}}>Name</span></TableCell>\n                        <TableCell><span style={{fontSize: '18px'}}>Amount</span></TableCell>\n                        {props.products.length > 0 && <TableCell align=\"right\">\n                            <Button variant=\"contained\"\n                                    color=\"secondary\"\n                                    onClick={() => dispatch(resetProducts())}\n                            >\n                                reset\n                            </Button>\n                        </TableCell>\n                        }\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {props.products?.map((row) => (\n                        <TableRow key={row.ID}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                <span style={{fontWeight: \"bold\", fontSize: '16px'}}>{returnName(row.ID)}</span>\n                            </TableCell>\n                            <TableCell component=\"th\" scope=\"row\">\n                                <span style={{fontWeight: \"bold\", fontSize: '16px'}}>\n                                    <EditableSpan\n                                        id={row.ID}\n                                        value={row.amount}\n                                        onChange={onChangeHandler}\n                                    /></span>\n                            </TableCell>\n                            <TableCell component=\"th\" scope=\"row\" align={'right'}>\n                                <DeleteForeverIcon\n                                    style={{color: red[500], cursor: \"pointer\"}}\n                                    onClick={() => deleteHandler(row.ID)}/>\n                            </TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}\n","import React, {useEffect} from 'react';\nimport 'date-fns';\nimport {useFormik} from 'formik';\nimport * as yup from 'yup';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport {Backdrop, createStyles, Fade, makeStyles, MenuItem, Modal, Paper, Theme} from \"@material-ui/core\";\nimport s from './InvoiceForm.module.css'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../redux/store\";\nimport {ClientType, getClientsTC} from \"../../reducers/client-reducer\";\nimport {getSellersTC, SellersType} from \"../../reducers/sellers-reducer\";\nimport {KeyboardDatePicker, MuiPickersUtilsProvider} from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {createInvoiceTC} from \"../../reducers/invoice-reducer\";\nimport ProductPickerForm from \"../ProductPickerForm/ProductPickerForm\";\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\nimport {addProduct, InvoiceProductType, resetProducts} from \"../../reducers/invoice-product-reducer\";\n\n\nexport const isObjEqual = (obj1: { ID: string, amount: string }, obj2: { ID: string, amount: string }) => {\n    return !(obj1.ID === obj2.ID && obj1.amount === obj2.amount);\n}\n\nconst validationSchema = yup.object({\n    client: yup\n        .string()\n        .required('Client is required'),\n    seller: yup\n        .string()\n        .required('Seller is required'),\n    status: yup\n        .string()\n        .required('Status is required'),\n});\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            '& .MuiTextField-root': {\n                margin: theme.spacing(1),\n                width: '25ch',\n            },\n            display: 'flex',\n            flexDirection: 'column',\n            width: '100%',\n            overflow: 'auto',\n            maxHeight: '90vh'\n        },\n        modal: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n        },\n        paper: {\n            backgroundColor: theme.palette.background.paper,\n            boxShadow: theme.shadows[5],\n            padding: theme.spacing(2),\n            margin: theme.spacing(2),\n        },\n        product: {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center',\n            width: \"80%\",\n            margin: \"10px auto\",\n            padding: \"20px 0\"\n        },\n        h1: {\n            ...theme.typography.button,\n            backgroundColor: theme.palette.background.paper,\n            padding: theme.spacing(1),\n        },\n        btnWrapp: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            width: '60%'\n        }\n    }),\n);\n\nexport type InvoiceStatus = \"paid\" | \"partially\" | \"unpaid\"\n\nconst InvoicePaymentStatus: InvoiceStatus[] = [\"paid\", \"partially\", \"unpaid\"]\n\nexport const InvoiceForm = () => {\n    const dispatch = useDispatch()\n    const classes = useStyles();\n\n    useEffect(() => {\n        return () => {\n            dispatch(resetProducts())\n        }\n    }, [])\n\n    const formik = useFormik({\n        initialValues: {\n            client: '',\n            seller: '',\n            product: '',\n            productCount: '',\n            status: ''\n        },\n        validationSchema: validationSchema,\n        onSubmit: (values) => {\n            let newInvoice = {\n                clientID: formik.values.client,\n                sellerID: formik.values.seller,\n                products: invoiceProductArr,\n                sellDate: sellMilliseconds,\n                paymentDate: paymentMilliseconds,\n                issueDate: issueMilliseconds,\n                status: formik.values.status\n            }\n            dispatch(createInvoiceTC(newInvoice))\n            formik.resetForm({\n                values: {\n                    client: '',\n                    seller: '',\n                    product: '',\n                    productCount: '',\n                    status: ''\n                }\n            })\n        },\n    });\n\n    const clients = useSelector<AppRootStateType, ClientType[]>(state => state.clients)\n    const sellers = useSelector<AppRootStateType, SellersType[]>(state => state.sellers)\n    const [modal, setModalOpen] = React.useState(false);\n\n    const products = sellers.find(item => item.ID === formik.values.seller)\n\n    const invoiceProductArr = useSelector<AppRootStateType, InvoiceProductType[]>(state => state.invoiceProducts)\n\n    const addItemsArr = () => {\n        const obj = {\n            ID: formik.values.product,\n            amount: formik.values.productCount\n        }\n        formik.resetForm({\n            values: {\n                client: formik.values.client,\n                seller: formik.values.seller,\n                product: '',\n                productCount: '',\n                status: formik.values.status\n            }\n        })\n        dispatch(addProduct(obj))\n    }\n\n    const modalOpen = () => {\n        setModalOpen(true);\n    };\n\n    const modalClose = () => {\n        setModalOpen(false);\n    };\n\n    const [sellDate, setSellDate] = React.useState<Date | null>(\n        new Date(),\n    );\n\n    const [paymentDate, setPaymentDate] = React.useState<Date | null>(\n        new Date(),\n    );\n\n\n    const [issueDate, setIssueDate] = React.useState<Date | null>(\n        new Date(),\n    );\n\n    const sellMilliseconds = issueDate && issueDate.getTime()\n    const paymentMilliseconds = paymentDate && paymentDate.getTime()\n    const issueMilliseconds = issueDate && issueDate.getTime()\n\n    const sellDateChange = (date: Date | null) => {\n        setSellDate(date);\n    };\n\n    const paymentDateChange = (date: Date | null) => {\n        setPaymentDate(date);\n    };\n\n    const issueDateChange = (date: Date | null) => {\n        setIssueDate(date);\n    };\n\n    return (\n        <Paper elevation={4} className={s.paper}>\n            <form className={classes.root} onSubmit={formik.handleSubmit}>\n                <TextField\n                    id=\"client\"\n                    name=\"client\"\n                    select\n                    label=\"Client\"\n                    value={formik.values.client}\n                    onChange={formik.handleChange}\n                    placeholder=\"Please select your Client\"\n                    variant=\"outlined\"\n                    className={s.input}\n                    error={formik.touched.client && Boolean(formik.errors.client)}\n                    helperText={formik.touched.client && formik.errors.client}\n                >\n                    {clients.map((option, idx) => (\n                        <MenuItem key={idx} value={option.ID}>\n                            {option.info.name}\n                        </MenuItem>\n                    ))}\n                </TextField>\n                <TextField\n                    id=\"seller\"\n                    name=\"seller\"\n                    select\n                    label=\"Seller\"\n                    value={formik.values.seller}\n                    onChange={formik.handleChange}\n                    placeholder=\"Please select your Seller\"\n                    variant=\"outlined\"\n                    className={s.input}\n                    error={formik.touched.seller && Boolean(formik.errors.seller)}\n                    helperText={formik.touched.seller && formik.errors.seller}\n                >\n                    {sellers.map((option, idx) => (\n                        <MenuItem key={idx} value={option.ID}>\n                            {option.info.name}\n                        </MenuItem>\n                    ))}\n                </TextField>\n                <Paper elevation={4} className={classes.product}>\n                    <h1 className={classes.h1}>Product</h1>\n                    <TextField\n                        id=\"product\"\n                        name=\"product\"\n                        select\n                        label=\"Product\"\n                        value={formik.values.product}\n                        onChange={formik.handleChange}\n                        placeholder=\"Please select your Product\"\n                        variant=\"outlined\"\n                        className={s.input}\n                        disabled={!formik.values.seller}\n                        error={formik.touched.product && Boolean(formik.errors.product)}\n                        helperText={formik.touched.product && formik.errors.product}\n                    >\n                        {products?.sellerProducts.map((option, idx) => (\n                            <MenuItem key={idx} value={option.ID}>\n                                {option.name}\n                            </MenuItem>\n                        ))}\n                    </TextField>\n\n                    <TextField\n                        id=\"productCount\"\n                        name=\"productCount\"\n                        type=\"number\"\n                        label=\"Product Count\"\n                        value={formik.values.productCount}\n                        onChange={formik.handleChange}\n                        placeholder=\"Please select count of products\"\n                        variant=\"outlined\"\n                        className={s.input}\n                        error={formik.touched.productCount && Boolean(formik.errors.productCount)}\n                        helperText={formik.touched.productCount && formik.errors.productCount}\n                    />\n                    <div className={classes.btnWrapp}>\n                        <Button variant=\"contained\"\n                                color=\"primary\"\n                                size=\"large\"\n                                onClick={addItemsArr}\n                                disabled={!formik.values.product || !formik.values.productCount}\n                        >\n                            Add to list\n                        </Button>\n                        <Button\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            size=\"large\"\n                            startIcon={<PlaylistAddCheckIcon/>}\n                            onClick={modalOpen}\n                            disabled={invoiceProductArr.length === 0}\n                        >\n                            List of Products\n                        </Button>\n                        <Modal\n                            aria-labelledby=\"transition-modal-title\"\n                            aria-describedby=\"transition-modal-description\"\n                            className={classes.modal}\n                            open={modal}\n                            onClose={modalClose}\n                            closeAfterTransition\n                            BackdropComponent={Backdrop}\n                            BackdropProps={{\n                                timeout: 500,\n                            }}\n                        >\n                            <Fade in={modal}>\n                                <ProductPickerForm products={invoiceProductArr} allProducts={products?.sellerProducts}/>\n                            </Fade>\n                        </Modal>\n                    </div>\n                </Paper>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <KeyboardDatePicker\n                        margin=\"normal\"\n                        id=\"sellDate\"\n                        name=\"sellDate\"\n                        label=\"Choose sell date\"\n                        format=\"MM/dd/yyyy\"\n                        value={sellDate}\n                        onChange={sellDateChange}\n                        KeyboardButtonProps={{\n                            'aria-label': 'change date',\n                        }}\n                        className={s.input}\n                    />\n                    <KeyboardDatePicker\n                        margin=\"normal\"\n                        id=\"paymentDate\"\n                        name=\"paymentDate\"\n                        label=\"Choose payment date\"\n                        format=\"MM/dd/yyyy\"\n                        value={paymentDate}\n                        onChange={paymentDateChange}\n                        KeyboardButtonProps={{\n                            'aria-label': 'change date',\n                        }}\n                        className={s.input}\n                    />\n                    <KeyboardDatePicker\n                        margin=\"normal\"\n                        id=\"issueDate\"\n                        name=\"issueDate\"\n                        label=\"Choose issue date\"\n                        format=\"MM/dd/yyyy\"\n                        value={issueDate}\n                        onChange={issueDateChange}\n                        KeyboardButtonProps={{\n                            'aria-label': 'change date',\n                        }}\n                        className={s.input}\n                    />\n                </MuiPickersUtilsProvider>\n                <TextField\n                    id=\"status\"\n                    name=\"status\"\n                    select\n                    label=\"Status\"\n                    value={formik.values.status}\n                    onChange={formik.handleChange}\n                    placeholder=\"Please select your Product\"\n                    variant=\"outlined\"\n                    className={s.input}\n                    error={formik.touched.status && Boolean(formik.errors.status)}\n                    helperText={formik.touched.status && formik.errors.status}\n                >\n                    {InvoicePaymentStatus.map((option, idx) => (\n                        <MenuItem key={idx} value={option}>\n                            {option}\n                        </MenuItem>\n                    ))}\n                </TextField>\n                <Button color=\"primary\" disabled={invoiceProductArr.length === 0} variant=\"contained\" type=\"submit\"\n                        className={s.btn}>\n                    Submit\n                </Button>\n            </form>\n        </Paper>\n    )\n        ;\n};\n\n","import React from 'react';\nimport clsx from 'clsx';\nimport {fade, createStyles, makeStyles, useTheme, Theme} from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SearchIcon from '@material-ui/icons/Search';\nimport {Button, Fade, InputBase, Modal} from \"@material-ui/core\";\nimport {AccountCircle} from \"@material-ui/icons\";\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport GroupIcon from '@material-ui/icons/Group';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport NoteAddIcon from '@material-ui/icons/NoteAdd';\nimport {NavLink} from \"react-router-dom\";\nimport s from './Main.module.css'\nimport {green} from \"@material-ui/core/colors\";\nimport Backdrop from '@material-ui/core/Backdrop';\nimport {InvoiceForm} from \"../InvoiceForm/InvoiceForm\";\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n        },\n        appBar: {\n            zIndex: theme.zIndex.drawer + 1,\n            transition: theme.transitions.create(['width', 'margin'], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n        },\n        appBarShift: {\n            marginLeft: drawerWidth,\n            width: `calc(100% - ${drawerWidth}px)`,\n            transition: theme.transitions.create(['width', 'margin'], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        menuButton: {\n            marginRight: 36,\n        },\n        hide: {\n            display: 'none',\n        },\n        drawer: {\n            width: drawerWidth,\n            flexShrink: 0,\n            whiteSpace: 'nowrap',\n        },\n        drawerOpen: {\n            width: drawerWidth,\n            transition: theme.transitions.create('width', {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        drawerClose: {\n            transition: theme.transitions.create('width', {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n            overflowX: 'hidden',\n            width: theme.spacing(7) + 1,\n            [theme.breakpoints.up('sm')]: {\n                width: theme.spacing(9) + 1,\n            },\n        },\n        toolbar: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'flex-end',\n            padding: theme.spacing(0, 1),\n            // necessary for content to be below app bar\n            ...theme.mixins.toolbar,\n        },\n        searchIcon: {\n            padding: theme.spacing(0, 2),\n            height: '100%',\n            position: 'absolute',\n            pointerEvents: 'none',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n        },\n        search: {\n            position: 'relative',\n            borderRadius: theme.shape.borderRadius,\n            backgroundColor: fade(theme.palette.common.white, 0.15),\n            '&:hover': {\n                backgroundColor: fade(theme.palette.common.white, 0.25),\n            },\n            marginRight: theme.spacing(2),\n            marginLeft: 0,\n            width: '100%',\n            [theme.breakpoints.up('sm')]: {\n                marginLeft: theme.spacing(3),\n                width: 'auto',\n            },\n        },\n        title: {\n            display: 'none',\n            [theme.breakpoints.up('sm')]: {\n                display: 'block',\n            },\n        },\n        inputRoot: {\n            color: 'inherit',\n        },\n        inputInput: {\n            padding: theme.spacing(1, 1, 1, 0),\n            // vertical padding + font size from searchIcon\n            paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n            transition: theme.transitions.create('width'),\n            width: '100%',\n            [theme.breakpoints.up('md')]: {\n                width: '20ch',\n            },\n        },\n        grow: {\n            flexGrow: 1,\n        },\n        sectionDesktop: {\n            display: 'none',\n            [theme.breakpoints.up('md')]: {\n                display: 'flex',\n            },\n        },\n        content: {\n            flexGrow: 1,\n            padding: theme.spacing(3),\n        },\n        sectionMobile: {\n            display: 'flex',\n            [theme.breakpoints.up('md')]: {\n                display: 'none',\n            },\n        },\n        button: {\n            margin: theme.spacing(1),\n            backgroundColor: green[500],\n            '&:hover': {\n                backgroundColor: green[700],\n            },\n        },\n        modal: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n        },\n        paper: {\n            backgroundColor: theme.palette.background.paper,\n            boxShadow: theme.shadows[5],\n            padding: theme.spacing(2),\n            margin: theme.spacing(2),\n        },\n\n    }),\n);\n\ntype MainPropsType = {\n    children: React.ReactNode\n}\n\n\nexport default function Main(props: MainPropsType) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(false);\n\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState<null | HTMLElement>(null);\n    const [modal, setModalOpen] = React.useState(false);\n\n    const modalOpen = () => {\n        setModalOpen(true);\n    };\n\n    const modalClose = () => {\n        setModalOpen(false);\n    };\n\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    const menuId = 'primary-search-account-menu';\n\n\n    const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n\n    const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n        setMobileMoreAnchorEl(event.currentTarget);\n    };\n\n\n    const mobileMenuId = 'primary-search-account-menu-mobile';\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline/>\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}\n            >\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, {\n                            [classes.hide]: open,\n                        })}\n                    >\n                        <MenuIcon/>\n                    </IconButton>\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\n                        Invoice\n                    </Typography>\n                    <div className={classes.search}>\n                        <div className={classes.searchIcon}>\n                            <SearchIcon/>\n                        </div>\n                        <InputBase\n                            placeholder=\"Search…\"\n                            classes={{\n                                root: classes.inputRoot,\n                                input: classes.inputInput,\n                            }}\n                            inputProps={{'aria-label': 'search'}}\n                        />\n                    </div>\n                    <div className={classes.grow}/>\n                    <div className={classes.sectionDesktop}>\n                        <Button\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            size=\"large\"\n                            className={classes.button}\n                            startIcon={<NoteAddIcon/>}\n                            onClick={modalOpen}\n                        >\n                            Create Invoice\n                        </Button>\n                        <Modal\n                            aria-labelledby=\"transition-modal-title\"\n                            aria-describedby=\"transition-modal-description\"\n                            className={classes.modal}\n                            open={modal}\n                            onClose={modalClose}\n                            closeAfterTransition\n                            BackdropComponent={Backdrop}\n                            BackdropProps={{\n                                timeout: 500,\n                            }}\n                        >\n                            <Fade in={modal}>\n                                <InvoiceForm/>\n                            </Fade>\n                        </Modal>\n                        <IconButton\n                            edge=\"end\"\n                            aria-label=\"account of current user\"\n                            aria-controls={menuId}\n                            aria-haspopup=\"true\"\n                            onClick={handleProfileMenuOpen}\n                            color=\"inherit\"\n                        >\n                            <AccountCircle/>\n                        </IconButton>\n                    </div>\n                    <div className={classes.sectionMobile}>\n                        <IconButton\n                            aria-label=\"show more\"\n                            aria-controls={mobileMenuId}\n                            aria-haspopup=\"true\"\n                            onClick={handleMobileMenuOpen}\n                            color=\"inherit\"\n                        >\n                            <MoreIcon/>\n                        </IconButton>\n                    </div>\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                variant=\"permanent\"\n                className={clsx(classes.drawer, {\n                    [classes.drawerOpen]: open,\n                    [classes.drawerClose]: !open,\n                })}\n                classes={{\n                    paper: clsx({\n                        [classes.drawerOpen]: open,\n                        [classes.drawerClose]: !open,\n                    }),\n                }}\n            >\n                <div className={classes.toolbar}>\n                    <IconButton onClick={handleDrawerClose}>\n                        {theme.direction === 'rtl' ? <ChevronRightIcon/> : <ChevronLeftIcon/>}\n                    </IconButton>\n                </div>\n                <Divider/>\n                <List>\n                    <NavLink className={s.link} to={'/clients'}>\n                        <ListItem button>\n                            <ListItemIcon> <GroupIcon/></ListItemIcon>\n                            <ListItemText primary={\"Clients\"}/>\n                        </ListItem>\n                    </NavLink>\n\n                    <NavLink className={s.link} to={'/invoices'}>\n                        <ListItem button>\n                            <ListItemIcon> <DescriptionIcon/></ListItemIcon>\n                            <ListItemText primary={\"Invoices\"}/>\n                        </ListItem>\n                    </NavLink>\n\n                    <NavLink className={s.link} to={'/sellers'}>\n                        <ListItem button>\n                            <ListItemIcon> <PersonIcon/></ListItemIcon>\n                            <ListItemText primary={\"Sellers\"}/>\n                        </ListItem>\n                    </NavLink>\n\n                </List>\n                <Divider/>\n                <List>\n                    <ListItem button>\n                        <ListItemIcon> <ExitToAppIcon/></ListItemIcon>\n                        <ListItemText primary={\"Exit\"}/>\n                    </ListItem>\n                </List>\n            </Drawer>\n            <main className={classes.content}>\n                <div className={classes.toolbar}/>\n                {props.children}\n            </main>\n        </div>\n    );\n}\n","import {Dispatch} from \"redux\";\nimport {facturaAPI} from \"../api/factures-api\";\nimport {setIsInitializedAC} from \"./app-reducer\";\nimport {handleServerAppError, handleServerNetworkError} from \"../Components/utils/error-utils\";\n\nexport type ClientInfoType = {\n    ID: string,\n    companyID: string,\n    name: string,\n    phone: string,\n    email: string,\n    numberTax: string,\n    bill: string,\n    currency: string\n}\n\nexport type ClientAddressType = {\n    ID: string,\n    street: string,\n    postalCode: string,\n    city: string,\n    country: string\n}\n\nexport type ClientCompanyType = {\n    ID: string,\n    name: string\n}\n\nexport type ClientType = {\n    ID: string,\n    info: ClientInfoType,\n    address: ClientAddressType[],\n    company: ClientCompanyType\n}\n\nlet clientInitialState: ClientType[] = [\n    {\n        \"ID\": \"1\",\n        \"info\": {\n            \"ID\": \"1\",\n            \"companyID\": \"1\",\n            \"name\": \"Andrzej Kanowski\",\n            \"phone\": \"+48939285221\",\n            \"numberTax\": \"4382348723\",\n            \"email\": \"andrzej@gmail.com\",\n            \"bill\": \"20000\",\n            \"currency\": \"PL\"\n        },\n        \"address\": [{\"ID\": \"1\", \"street\": \"street 1\", \"postalCode\": \"35555\", \"city\": \"Rzeszow\", \"country\": \"Polska\"}],\n        \"company\": {\"ID\": \"1\", \"name\": \"Ideo\"}\n    },\n]\n\nexport const clientReducer = (state = clientInitialState, action: ClientsActionType) => {\n    switch (action.type) {\n        case \"SET_CLIENTS\":\n            return [\n                ...action.clients\n            ]\n        default:\n            return state\n    }\n}\n\n\ntype ClientsActionType =\n    |ReturnType<typeof setClients>\n\n\nconst setClients = (clients: ClientType[]) => ({\n    type: \"SET_CLIENTS\",\n    clients\n} as const)\n\n\nexport const getClientsTC = () => (dispatch: Dispatch) => {\n    dispatch(setIsInitializedAC(false))\n    facturaAPI.getClients()\n        .then((res) => {\n            dispatch(setIsInitializedAC(true))\n            if (res.data.resultCode === 0) {\n                dispatch(setClients(res.data.data))\n            } else {\n                handleServerAppError(res.data, dispatch);\n            }\n        })\n        .catch((error) => {\n            handleServerNetworkError(error, dispatch)\n        })\n}\n","import React, {useEffect} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../redux/store\";\nimport {ClientType, getClientsTC} from \"../../reducers/client-reducer\";\nimport {CircularProgress} from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 650,\n    },\n});\n\n\n\nexport default function ClientsTable() {\n    const dispatch = useDispatch()\n    const classes = useStyles();\n    const rows = useSelector<AppRootStateType, ClientType[]>(state => state.clients)\n    let isInitialized = useSelector<AppRootStateType, boolean>(state => state.app.isInitialized)\n\n    useEffect(() => {\n        dispatch(getClientsTC())\n    }, [])\n\n    if (!isInitialized) {\n        return <div\n            style={{position: 'fixed', top: '30%', textAlign: 'center', width: '100%'}}>\n            <CircularProgress/>\n        </div>\n    }\n\n    return (\n        <TableContainer component={Paper}>\n            <Table className={classes.table} aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell><span style={{fontSize: '16px'}}>Name</span></TableCell>\n                        <TableCell align=\"right\"><span style={{fontSize: '16px'}}>Contacts</span></TableCell>\n                        <TableCell align=\"right\"><span style={{fontSize: '16px'}}>Bill</span></TableCell>\n                        <TableCell align=\"right\"><span style={{fontSize: '16px'}}>Address</span></TableCell>\n                        <TableCell align=\"right\"><span style={{fontSize: '16px'}}>Company</span></TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {rows.map((row) => (\n                        <TableRow key={row.info.ID}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                <span style={{fontWeight: \"bold\"}}>{row.info.name}</span>\n                            </TableCell>\n                            <TableCell align=\"right\">\n                                <div>\n                                    <div> Email: <span\n                                        style={{fontWeight: \"bold\", fontSize: '14px'}}>{row.info.email}</span></div>\n                                    <div> Phone: <span\n                                        style={{fontWeight: \"bold\", fontSize: '14px'}}>{row.info.phone}</span></div>\n                                    <div> Tax: <span\n                                        style={{fontWeight: \"bold\", fontSize: '14px'}}>{row.info.numberTax}</span></div>\n                                </div>\n                            </TableCell>\n                            <TableCell align=\"right\"\n                                       style={{fontWeight: \"bold\"}}>{row.info.bill} {row.info.currency}</TableCell>\n                            <TableCell align=\"right\">\n                                <div>\n                                    <div> Country: <span\n                                        style={{fontWeight: \"bold\"}}>{row.address.map(item => item.country)}</span>\n                                    </div>\n                                    <div> City: <span\n                                        style={{fontWeight: \"bold\"}}>{row.address.map(item => item.city)}</span>\n                                    </div>\n                                    <div> Street: <span\n                                        style={{fontWeight: \"bold\"}}>{row.address.map(item => item.street)}</span>\n                                    </div>\n                                    <div> PostalCode: <span\n                                        style={{fontWeight: \"bold\"}}>{row.address.map(item => item.postalCode)}</span>\n                                    </div>\n                                </div>\n                            </TableCell>\n                            <TableCell align=\"right\"> <span style={{fontWeight: \"bold\"}}>{row.company.name}</span>\n                            </TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}\n","import {ClientAddressType, ClientCompanyType, ClientInfoType, ClientType} from \"./client-reducer\";\nimport {Dispatch} from \"redux\";\nimport {facturaAPI} from \"../api/factures-api\";\nimport {ProductType} from \"./products-reducer\";\nimport {setIsInitializedAC} from \"./app-reducer\";\nimport {handleServerAppError, handleServerNetworkError} from \"../Components/utils/error-utils\";\n\n\nexport type SellersType = {\n    ID: string,\n    info: ClientInfoType,\n    address: ClientAddressType[],\n    company: ClientCompanyType,\n    sellerProducts: ProductType[]\n}\n\n\nlet sellerInitialState: SellersType[] = [\n    {\n        \"ID\": \"1\",\n        \"info\": {\n            \"ID\": \"1\",\n            \"companyID\": \"1\",\n            \"name\": \"Andrzej Kanowski\",\n            \"phone\": \"+48939285221\",\n            \"numberTax\": \"4382348723\",\n            \"email\": \"andrzej@gmail.com\",\n            \"bill\": \"20000\",\n            \"currency\": \"PL\"\n        },\n        \"address\": [{\"ID\": \"1\", \"street\": \"street 1\", \"postalCode\": \"35555\", \"city\": \"Rzeszow\", \"country\": \"Polska\"}],\n        \"company\": {\"ID\": \"1\", \"name\": \"Ideo\"},\n        \"sellerProducts\": [\n            {\n                \"ID\": \"1\",\n                \"name\": \"Milk\",\n                \"price\": \"2\",\n                \"unit\": \"bottle\",\n                \"currency\": \"PL\",\n                \"tax\": \"2\"\n            },\n            {\n                \"ID\": \"2\",\n                \"name\": \"Sweet fresh stawberry\",\n                \"price\": \"10\",\n                \"unit\": \"kg\",\n                \"currency\": \"PL\",\n                \"tax\": \"5\"\n            },\n            {\n                \"ID\": \"3\",\n                \"name\": \"Homemade bread\",\n                \"price\": \"4\",\n                \"unit\": \"piece\",\n                \"currency\": \"PL\",\n                \"tax\": \"5\"\n            },\n            {\n                \"ID\": \"4\",\n                \"name\": \"Tomato\",\n                \"price\": \"5\",\n                \"unit\": \"kg\",\n                \"currency\": \"PL\",\n                \"tax\": \"5\"\n            },\n            {\n                \"ID\": \"5\",\n                \"name\": \"Pears\",\n                \"price\": \"3\",\n                \"unit\": \"kg\",\n                \"currency\": \"PL\",\n                \"tax\": \"5\"\n            }\n        ]\n    }\n]\n\n\nexport const sellersReducer = (state = sellerInitialState, action: SellersReducerActionType) => {\n    switch (action.type) {\n        case \"SET_SELLERS\":\n            return [\n                ...action.sellers\n            ]\n        default:\n            return state\n    }\n}\n\ntype SellersReducerActionType =\n    |ReturnType<typeof setSellers>\n\nconst setSellers = (sellers: SellersType[]) => ({\n    type: \"SET_SELLERS\",\n    sellers\n})\n\nexport const getSellersTC = () => (dispatch: Dispatch) => {\n    dispatch(setIsInitializedAC(false))\n    facturaAPI.getSellers()\n        .then(res => {\n            dispatch(setIsInitializedAC(true))\n            if (res.data.resultCode === 0) {\n                dispatch(setSellers(res.data.data))\n            } else {\n                handleServerAppError(res.data, dispatch);\n            }\n        })\n        .catch((error) => {\n            handleServerNetworkError(error, dispatch)\n        })\n}\n\n","import React, {useEffect} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport {ProductType} from \"../reducers/products-reducer\";\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 650,\n    },\n});\n\ntype ProductPropsType ={\n    products: ProductType[]\n}\n\n\nexport default function ProductTable(props: ProductPropsType) {\n    const classes = useStyles();\n    return (\n        <TableContainer component={Paper}>\n            <Table className={classes.table} aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell><span style={{fontSize: '16px'}}>Name</span></TableCell>\n                        <TableCell align=\"right\"><span style={{fontSize: '16px'}}>Price</span></TableCell>\n                        <TableCell align=\"right\"><span style={{fontSize: '16px'}}>Unit</span></TableCell>\n                        <TableCell align=\"right\"><span style={{fontSize: '16px'}}>Currency</span></TableCell>\n                        <TableCell align=\"right\"><span style={{fontSize: '16px'}}>Tax</span></TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {props.products.map((row) => (\n                        <TableRow key={row.ID}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                <span style={{fontWeight: \"bold\"}}>{row.name}</span>\n                            </TableCell>\n                            <TableCell align=\"right\">\n                                <span style={{fontWeight: \"bold\"}}>{row.price}</span>\n                            </TableCell>\n                            <TableCell align=\"right\">\n                                <span style={{fontWeight: \"bold\"}}>{row.unit}</span>\n                            </TableCell>\n                            <TableCell align=\"right\">\n                                <span style={{fontWeight: \"bold\"}}>{row.currency}</span>\n                            </TableCell>\n                            <TableCell align=\"right\">\n                                <span style={{fontWeight: \"bold\"}}>{row.tax}</span>\n                            </TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}\n","import React, {useEffect} from 'react';\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../redux/store\";\nimport {ClientType, getClientsTC} from \"../../reducers/client-reducer\";\nimport {getSellersTC, SellersType} from \"../../reducers/sellers-reducer\";\nimport {Backdrop, Button, CircularProgress, Fade, Modal} from \"@material-ui/core\";\nimport ClientsTable from \"../ClientsTable/ClientsTable\";\nimport ProductTable from \"../../ProductTable/ProductTable\";\nimport ShoppingBasketIcon from \"@material-ui/icons/ShoppingBasket\";\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    table: {\n        minWidth: 650,\n    },\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    paper: {\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n}));\n\n\nexport default function SellersTable() {\n    const dispatch = useDispatch()\n    const classes = useStyles();\n\n    const rows = useSelector<AppRootStateType, SellersType[]>(state => state.sellers)\n    let isInitialized = useSelector<AppRootStateType, boolean>(state => state.app.isInitialized)\n\n    useEffect(() => {\n        dispatch(getSellersTC())\n    }, [])\n    const [open, setOpen] = React.useState(false);\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    if (!isInitialized) {\n        return <div\n            style={{position: 'fixed', top: '30%', textAlign: 'center', width: '100%'}}>\n            <CircularProgress/>\n        </div>\n    }\n\n    return (\n        <TableContainer component={Paper}>\n            <Table className={classes.table} aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell><span style={{fontSize: '16px'}}>Name</span></TableCell>\n                        <TableCell align=\"right\"><span style={{fontSize: '16px'}}>Contacts</span></TableCell>\n                        <TableCell align=\"right\"><span style={{fontSize: '16px'}}>Bill</span></TableCell>\n                        <TableCell align=\"right\"><span style={{fontSize: '16px'}}>Address</span></TableCell>\n                        <TableCell align=\"right\"><span style={{fontSize: '16px'}}>Company</span></TableCell>\n                        <TableCell align=\"right\"><span style={{fontSize: '16px'}}>Products</span></TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {rows.map((row) => (\n                        <TableRow key={row.info.ID}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                <span style={{fontWeight: \"bold\"}}>{row.info.name}</span>\n                            </TableCell>\n                            <TableCell align=\"right\">\n                                <div>\n                                    <div> Email: <span\n                                        style={{fontWeight: \"bold\", fontSize: '14px'}}>{row.info.email}</span></div>\n                                    <div> Phone: <span\n                                        style={{fontWeight: \"bold\", fontSize: '14px'}}>{row.info.phone}</span></div>\n                                    <div> Tax: <span\n                                        style={{fontWeight: \"bold\", fontSize: '14px'}}>{row.info.numberTax}</span></div>\n                                </div>\n                            </TableCell>\n                            <TableCell align=\"right\"\n                                       style={{fontWeight: \"bold\"}}>{row.info.bill} {row.info.currency}</TableCell>\n                            <TableCell align=\"right\">\n                                <div>\n                                    <div> Country: <span\n                                        style={{fontWeight: \"bold\"}}>{row.address.map(item => item.country)}</span>\n                                    </div>\n                                    <div> City: <span\n                                        style={{fontWeight: \"bold\"}}>{row.address.map(item => item.city)}</span>\n                                    </div>\n                                    <div> Street: <span\n                                        style={{fontWeight: \"bold\"}}>{row.address.map(item => item.street)}</span>\n                                    </div>\n                                    <div> PostalCode: <span\n                                        style={{fontWeight: \"bold\"}}>{row.address.map(item => item.postalCode)}</span>\n                                    </div>\n                                </div>\n                            </TableCell>\n                            <TableCell align=\"right\"> <span style={{fontWeight: \"bold\"}}>{row.company.name}</span>\n                            </TableCell>\n                            <TableCell align=\"right\">\n                                <ShoppingBasketIcon fontSize={\"large\"} style={{cursor: \"pointer\"}} color=\"primary\" onClick={handleOpen}/>\n                                <Modal\n                                    aria-labelledby=\"transition-modal-title\"\n                                    aria-describedby=\"transition-modal-description\"\n                                    className={classes.modal}\n                                    open={open}\n                                    onClose={handleClose}\n                                    closeAfterTransition\n                                    BackdropComponent={Backdrop}\n                                    BackdropProps={{\n                                        timeout: 500,\n                                    }}\n                                >\n                                    <Fade in={open}>\n                                        <div className={classes.paper}>\n                                            <ProductTable products={row.sellerProducts}/>\n                                        </div>\n                                    </Fade>\n                                </Modal>\n                            </TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}\n","import React, {useEffect} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport {ProductType} from \"../../../reducers/products-reducer\";\nimport {useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../../redux/store\";\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 650,\n    },\n});\n\ntype ProductPropsType = {\n    products: { ID: string, amount: string }[]\n}\n\n\nexport default function InvoicesProductTable(props: ProductPropsType) {\n    const classes = useStyles();\n\n    const productsAll = useSelector<AppRootStateType, ProductType[]>(state => state.products)\n    const findProduct = (id: string) => {\n        let product = productsAll.find(item => item.ID === id)\n        if (!product) {\n            return\n        } else {\n            return product\n        }\n    }\n    return (\n        <TableContainer component={Paper}>\n            <Table className={classes.table} aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell><span style={{fontSize: '16px'}}>Name</span></TableCell>\n                        <TableCell align=\"right\"><span style={{fontSize: '16px'}}>Price</span></TableCell>\n                        <TableCell align=\"right\"><span style={{fontSize: '16px'}}>Unit</span></TableCell>\n                        <TableCell align=\"right\"><span style={{fontSize: '16px'}}>Currency</span></TableCell>\n                        <TableCell align=\"right\"><span style={{fontSize: '16px'}}>Tax</span></TableCell>\n                        <TableCell align=\"right\"><span style={{fontSize: '16px'}}>Amount</span></TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n\n                    {props.products.map((row) => (\n                        <TableRow key={row.ID}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                <span style={{fontWeight: \"bold\"}}>{findProduct(row.ID)?.name}</span>\n                            </TableCell>\n                            <TableCell align=\"right\">\n                                <span style={{fontWeight: \"bold\"}}>{findProduct(row.ID)?.price}</span>\n                            </TableCell>\n                            <TableCell align=\"right\">\n                                <span style={{fontWeight: \"bold\"}}>{findProduct(row.ID)?.unit}</span>\n                            </TableCell>\n                            <TableCell align=\"right\">\n                                <span style={{fontWeight: \"bold\"}}>{findProduct(row.ID)?.currency}</span>\n                            </TableCell>\n                            <TableCell align=\"right\">\n                                <span style={{fontWeight: \"bold\"}}>{findProduct(row.ID)?.tax}</span>\n                            </TableCell>\n                            <TableCell align=\"right\">\n                                <span style={{fontWeight: \"bold\"}}>{row.amount}</span>\n                            </TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}\n","import React from 'react';\nimport {makeStyles, Theme, createStyles} from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport {Button} from \"@material-ui/core\";\nimport InvoicesProductTable from \"../InvoicesTable/InvoicesProductTable/InvoicesProductTable\";\nimport {InvoiceProductType} from \"../../reducers/invoice-product-reducer\";\nimport ShoppingBasketIcon from '@material-ui/icons/ShoppingBasket';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        modal: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n        },\n    }),\n);\n\ntype ProductModalPropsType = {\n    products: InvoiceProductType[]\n}\n\nexport default function ProductModal(props: ProductModalPropsType) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div>\n            <ShoppingBasketIcon fontSize={\"large\"} style={{cursor: \"pointer\"}} color=\"primary\" onClick={handleOpen}/>\n            <Modal\n                aria-labelledby=\"transition-modal-title\"\n                aria-describedby=\"transition-modal-description\"\n                className={classes.modal}\n                open={open}\n                onClose={handleClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n            >\n                <Fade in={open}>\n                    <div>\n                        <InvoicesProductTable products={props.products}/>\n                    </div>\n                </Fade>\n            </Modal>\n        </div>\n    );\n}\n","import React, {useEffect} from 'react';\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../redux/store\";\nimport {ClientType} from \"../../reducers/client-reducer\";\nimport {SellersType} from \"../../reducers/sellers-reducer\";\nimport {deleteInvoiceTC, getInvoicesTC, InvoiceType} from \"../../reducers/invoice-reducer\";\nimport ProductModal from \"../ProductModal/ProductModal\";\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport {Box, CircularProgress} from \"@material-ui/core\";\nimport {RequestStatusType} from \"../../reducers/app-reducer\";\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    table: {\n        minWidth: 650,\n    },\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    paper: {\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n    span: {\n        fontWeight: \"bold\",\n        fontSize: \"16px\"\n    }\n}));\n\n\nexport default function InvoicesTable() {\n\n    const dispatch = useDispatch()\n    const classes = useStyles();\n\n    const rows = useSelector<AppRootStateType, InvoiceType[]>(state => state.invoices)\n    const clients = useSelector<AppRootStateType, ClientType[]>(state => state.clients)\n    const sellers = useSelector<AppRootStateType, SellersType[]>(state => state.sellers)\n    const isInitialized = useSelector<AppRootStateType, boolean>(state => state.app.isInitialized)\n    const appStatus = useSelector<AppRootStateType, RequestStatusType>(state => state.app.status)\n\n    useEffect(() => {\n        dispatch(getInvoicesTC())\n    }, [])\n\n    const findClientName = (id: string) => {\n        let client = clients.find(item => item.ID === id)\n        if (!client) {\n            return\n        } else {\n            return client.info.name\n        }\n    }\n    const findSellerName = (id: string) => {\n        let seller = sellers.find(item => item.ID === id)\n        if (!seller) {\n            return\n        } else {\n            return seller.info.name\n        }\n    }\n\n    const deleteHandler = (invoiceId: string) => {\n        dispatch(deleteInvoiceTC(invoiceId))\n    }\n\n    if (!isInitialized) {\n        return <div\n            style={{position: 'fixed', top: '30%', textAlign: 'center', width: '100%'}}>\n            <CircularProgress/>\n        </div>\n    }\n\n    return (\n        <TableContainer component={Paper}>\n            <Table size={\"medium\"} className={classes.table} aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell><span style={{fontSize: '16px'}}>Invoice Number</span></TableCell>\n                        <TableCell align=\"right\"><span style={{fontSize: '16px'}}>Client</span></TableCell>\n                        <TableCell align=\"right\"><span style={{fontSize: '16px'}}>Seller</span></TableCell>\n                        <TableCell align=\"right\"><span style={{fontSize: '16px'}}>SellDate</span></TableCell>\n                        <TableCell align=\"right\"><span style={{fontSize: '16px'}}>PaymentDate</span></TableCell>\n                        <TableCell align=\"right\"><span style={{fontSize: '16px'}}>IssueDate</span></TableCell>\n                        <TableCell align=\"right\"><span style={{fontSize: '16px'}}>Status</span></TableCell>\n                        <TableCell align=\"right\"><span style={{fontSize: '16px'}}>PriceNetto</span></TableCell>\n                        <TableCell align=\"right\"><span style={{fontSize: '16px'}}>priceBrutto</span></TableCell>\n                        <TableCell align=\"left\"><span style={{fontSize: '16px'}}>Products</span></TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {rows.map((row) => (\n                        <TableRow style={{height: 100}} key={row.ID}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                <span className={classes.span}>{row.numberFacture}</span>\n                            </TableCell>\n\n                            <TableCell align=\"right\"\n                                       className={classes.span}>\n                                {findClientName(row.clientID)}\n                            </TableCell>\n                            <TableCell align=\"right\">\n                                <span\n                                    className={classes.span}>{findSellerName(row.sellerID)}</span>\n                            </TableCell>\n                            <TableCell align=\"right\"\n                                       className={classes.span}>\n                                {new Date(parseInt(row.sellDate)).toDateString()}\n                            </TableCell>\n                            <TableCell align=\"right\"> <span\n                                style={{\n                                    fontWeight: \"bold\",\n                                    fontSize: \"16px\"\n                                }}>{new Date(parseInt(row.paymentDate)).toDateString()}</span>\n                            </TableCell>\n                            <TableCell align=\"right\"> <span\n                                style={{\n                                    fontWeight: \"bold\",\n                                    fontSize: \"16px\"\n                                }}>{new Date(parseInt(row.issueDate)).toDateString()}</span>\n                            </TableCell>\n                            <TableCell align=\"right\"> <span\n                                className={classes.span}>{row.status}</span>\n                            </TableCell>\n                            <TableCell align=\"right\"> <span\n                                className={classes.span}>{row.priceNetto}</span>\n                            </TableCell>\n                            <TableCell align=\"right\"> <span\n                                className={classes.span}>{row.priceBrutto}</span>\n                            </TableCell>\n                            <TableCell align=\"center\">\n                                <Box display={'flex'}>\n                                    <ProductModal products={row.products}/>\n                                    <DeleteOutlineIcon color={appStatus === \"loading\" ? \"disabled\" : \"secondary\"}\n                                                       style={{cursor: \"pointer\", margin: \"0 10px\"}}\n                                                       fontSize={\"large\"}\n                                                       onClick={appStatus === \"loading\" ? () => {}\n                                                           : () => deleteHandler(row.ID)}\n                                    />\n                                </Box>\n                            </TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/welcome.ad6cdb62.svg\";","import React from 'react';\nimport s from './FirstPage.module.css'\nimport invoice from '../assets/img/invoiceSvg.svg'\nimport welcome from '../assets/img/welcome.svg'\n\n\nconst FirstPage = () => {\n\n\n    return (\n        <div className={s.wrapp}>\n            <img className={s.img} src={welcome} alt={''}/>\n        </div>\n    );\n};\n\nexport default FirstPage;\n","import React from 'react'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport MuiAlert, {AlertProps} from '@material-ui/lab/Alert'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {AppRootStateType} from \"../../redux/store\";\r\nimport {RequestStatusType, setAppErrorAC} from \"../../reducers/app-reducer\";\r\n\r\n\r\nfunction Alert(props: AlertProps) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />\r\n}\r\n\r\nexport function ErrorSnackbar() {\r\n    //const [open, setOpen] = React.useState(true)\r\n    const error = useSelector<AppRootStateType, string | null>(state => state.app.error);\r\n    const appStatus = useSelector<AppRootStateType, RequestStatusType>(state => state.app.status)\r\n    const dispatch = useDispatch()\r\n\r\n    const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return\r\n        }\r\n        dispatch(setAppErrorAC(null));\r\n    }\r\n\r\n\r\n    const isOpen = error !== null;\r\n\r\n    return (\r\n        <Snackbar open={isOpen} autoHideDuration={3000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity={appStatus === \"failed\" ? \"error\" : \"success\"}>\r\n                {error}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n}\r\n","import React, {useEffect} from 'react';\nimport './App.css';\nimport Main from \"./Components/Main/Main\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getClientsTC} from \"./reducers/client-reducer\";\nimport {Route, Switch} from 'react-router-dom';\nimport ClientTable from \"./Components/ClientsTable/ClientsTable\";\nimport SellersTable from \"./Components/SellersTable/SellersTable\";\nimport {InvoiceForm} from \"./Components/InvoiceForm/InvoiceForm\";\nimport {getSellersTC} from \"./reducers/sellers-reducer\";\nimport InvoicesTable from \"./Components/InvoicesTable/InvoicesTable\";\nimport {CircularProgress, LinearProgress} from \"@material-ui/core\";\nimport FirstPage from \"./FirstPage/FirstPage\";\nimport {AppRootStateType} from \"./redux/store\";\nimport {getInvoicesTC} from \"./reducers/invoice-reducer\";\nimport {ErrorSnackbar} from \"./Components/ErrorSnackbar/ErrorSnackbar\";\n\n\nfunction App() {\n    const dispatch = useDispatch()\n    useEffect(() => {\n        dispatch(getClientsTC())\n        dispatch(getSellersTC())\n        dispatch(getInvoicesTC())\n    }, [])\n\n    return (\n        <Main>\n            <ErrorSnackbar/>\n            {/*<LinearProgress/>*/}\n            <Switch>\n                <Route exact path={'/'} render={() => <FirstPage/>}/>\n                <Route path={'/clients'} render={() => <ClientTable/>}/>\n                <Route path={'/sellers'} render={() => <SellersTable/>}/>\n                <Route path={'/invoices'} render={() => <InvoicesTable/>}/>\n                <Route path={'/create-invoice'} render={() => <InvoiceForm/>}/>\n            </Switch>\n        </Main>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export type ProductType = {\n    ID: string,\n    name: string,\n    price: string,\n    unit: string,\n    currency: string,\n    tax: string\n}\n\nconst initialProductState: ProductType[] = [\n    {\n        \"ID\": \"1\",\n        \"name\": \"Milk\",\n        \"price\": \"2\",\n        \"unit\": \"bottle\",\n        \"currency\": \"PL\",\n        \"tax\": \"2\"\n    },\n    {\n        \"ID\": \"2\",\n        \"name\": \"Sweet fresh stawberry\",\n        \"price\": \"10\",\n        \"unit\": \"kg\",\n        \"currency\": \"PL\",\n        \"tax\": \"5\"\n    },\n    {\n        \"ID\": \"3\",\n        \"name\": \"Homemade bread\",\n        \"price\": \"4\",\n        \"unit\": \"piece\",\n        \"currency\": \"PL\",\n        \"tax\": \"5\"\n    },\n    {\n        \"ID\": \"4\",\n        \"name\": \"Tomato\",\n        \"price\": \"5\",\n        \"unit\": \"kg\",\n        \"currency\": \"PL\",\n        \"tax\": \"5\"\n    },\n    {\n        \"ID\": \"5\",\n        \"name\": \"Pears\",\n        \"price\": \"3\",\n        \"unit\": \"kg\",\n        \"currency\": \"PL\",\n        \"tax\": \"5\"\n    },\n    {\n        \"ID\": \"6\",\n        \"name\": \"Yogurt\",\n        \"price\": \"4\",\n        \"unit\": \"bottle\",\n        \"currency\": \"PL\",\n        \"tax\": \"2\"\n    },\n    {\n        \"ID\": \"7\",\n        \"name\": \"Cherry\",\n        \"price\": \"6\",\n        \"unit\": \"kg\",\n        \"currency\": \"PL\",\n        \"tax\": \"8\"\n    },\n    {\n        \"ID\": \"8\",\n        \"name\": \"Lemon\",\n        \"price\": \"6\",\n        \"unit\": \"kg\",\n        \"currency\": \"PL\",\n        \"tax\": \"5\"\n    },\n    {\n        \"ID\": \"9\",\n        \"name\": \"Plums\",\n        \"price\": \"4\",\n        \"unit\": \"kg\",\n        \"currency\": \"PL\",\n        \"tax\": \"7\"\n    },\n    {\n        \"ID\": \"10\",\n        \"name\": \"Avocado\",\n        \"price\": \"10\",\n        \"unit\": \"kg\",\n        \"currency\": \"PL\",\n        \"tax\": \"5\"\n    }\n]\n\nexport const productReducer = (state = initialProductState, action: ProductsReducerActionType) => {\n    switch (action.type) {\n        case \"SET_PRODUCTS\":\n            return [\n                ...action.products\n            ]\n        default:\n            return state\n    }\n}\n\nexport type ProductsReducerActionType =\n    | ReturnType<typeof setProducts>\n\nexport const setProducts = (products: ProductType[]) => ({\n    type: \"SET_PRODUCTS\",\n    products\n} as const)\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport thunkMiddleware from 'redux-thunk'\nimport {clientReducer} from \"../reducers/client-reducer\";\nimport {sellersReducer} from \"../reducers/sellers-reducer\";\nimport {invoiceReducer} from \"../reducers/invoice-reducer\";\nimport {productReducer} from \"../reducers/products-reducer\";\nimport {invoiceProductReducer} from \"../reducers/invoice-product-reducer\";\nimport {appReducer} from \"../reducers/app-reducer\";\n\nconst rootReducer = combineReducers({\n    clients: clientReducer,\n    sellers: sellersReducer,\n    invoices: invoiceReducer,\n    products: productReducer,\n    invoiceProducts: invoiceProductReducer,\n    app: appReducer\n})\n\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\n\nexport type AppRootStateType = ReturnType<typeof rootReducer>\n\n// @ts-ignore\nwindow.store = store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./redux/store\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paper\":\"InvoiceForm_paper__1TZOg\",\"input\":\"InvoiceForm_input__3YB8y\",\"btn\":\"InvoiceForm_btn__3ge3n\"};"],"sourceRoot":""}